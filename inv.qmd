---
title: "Parasite specificty determines infection of exotic fish species"
format: html
editor: visual
---

```{r}
#| label: "setup"
#| include: false
knitr::opts_chunk$set(echo=F,message=F,warning=F,tidy=T)
library(tidyverse)
library(magrittr)
library(ape) #plot tree
library(picante) #evol distinct
```

This analysis uses the data from Garc√≠a-Prieto et al. (2022) to study consequences of parasite specificity.

First, we source the `paraPrep` file, which reads in the data, and harmonizes parasites names and taxonomy

```{r sourceParaPrep}
source(knitr::purl("paraPrep.qmd",quiet=T))
```

Next, we read in a fish phylogenetic tree

```{r readFishPhylo}
library(ape)
tree <- ape::read.tree("actinopt_12k_raxml.tre")

```

```{r filterAdult}
f %<>% mutate(Stage=stringr::str_replace_all(Stage,"Adulto","Adult"))
fA <- f %>% dplyr::filter(Stage=="Adult")

# remove host or parasite taxa not identified to species
fA %<>% dplyr::filter(grepl("sp\\.",Host_species)==F)
fA %<>% dplyr::filter(grepl("sp\\.",Parasite_species)==F)

hostOfAdultParas <- fA %>% dplyr::select(Host_species) %>% distinct() %>% pull()
hostOfAdultParas <- gsub("_"," ",hostOfAdultParas)
```

We create a host-parasite matrix

```{r createHPmatrix}
# matrix of host-(adult)parasite associations
m <- as.data.frame.matrix(table(fA$Parasite_species,fA$Host_species))
```

Currently 56 missing fish (in database but not phylogeny)

```{r eval=F}
# probably a fish synonym issue, but for now remove host species not in fish phylo
missingFish <- setdiff(colnames(m),tree$tip.label)
missingFishFormatted <- gsub("_"," ",missingFish)
library(rfishbase)
synCheck <- rfishbase::synonyms(missingFishFormatted,server="fishbase")
synCheck %<>% dplyr::filter(Status %in% c("misapplied name","synonym")) %>% dplyr::select(synonym,Species)
synCheck %<>% dplyr::mutate(across(.cols=everything(),~str_replace_all(.," ","_")))

idx.1 <- which(fA$Host_species==synCheck$synonym[1])#identifies synomym mathcing in tree
idx.2 <- which(fA$Host_species==synCheck$synonym[2])# does not
idx.3 <- which(fA$Host_species==synCheck$synonym[3])# does not
idx.4 <- which(fA$Host_species==synCheck$synonym[3])# does not

#remove found fish from missing fish
idx.foundFish <- which(missingFish %in% synCheck$synonym[1:4])
missingFish <- missingFish[-idx.foundFish]
missingFishFormatted <- gsub("_"," ",missingFish)


fA$Host_species[idx.1] <- synCheck$Species[1]
fA$Host_species[idx.2] <- synCheck$Species[2]
fA$Host_species[idx.3] <- synCheck$Species[3]
fA$Host_species[idx.4] <- synCheck$Species[4]

#idx.2 and idx.3 didn't recover a useful synonym

# recalculate matrix of host-(adult)parasite associations
m <- as.data.frame.matrix(table(fA$Parasite_species,fA$Host_species))

# for now we remove from host-parasite data those fish species that are not found in the phylogenetic tree
fA %<>% dplyr::filter(!Host_species %in% missingFish)
#reCalc fParas now some species removed
fParas <- fA %>% dplyr::select(Parasite_species) %>% distinct() %>% pull()
```

Are the parasites of exotic fish species (that are also parasites of native fish species) a non-random sample?

```{r}

exoParas <- fA %>% dplyr::filter(Exotic_or_native=="Exotic") %>% dplyr::select(Parasite_species) %>% distinct() %>% pull()
natParas <- fA %>% dplyr::filter(Exotic_or_native=="Native") %>% dplyr::select(Parasite_species) %>% distinct() %>% pull()

onlyExoParas <- setdiff(exoParas,natParas)


fA %<>% dplyr::filter(!Parasite_species%in%onlyExoParas)


natBoth <- tibble(Parasite_species=exoParas,natBoth="both")
natBoth2 <- tibble(Parasite_species=natParas,natBoth="nat")
natBoth %<>% bind_rows(.,natBoth2)

doubleCounted <- natBoth %>% group_by(Parasite_species) %>% summarize(n=n()) %>% dplyr::filter(n>1) %>% pull(Parasite_species)
forTheChop <- NULL
for (i in 1:dim(natBoth)[1]){
  if (natBoth$Parasite_species[i] %in% doubleCounted & natBoth$natBoth[i]=="nat"){
    forTheChop <- c(forTheChop,i)
  }
}

natBoth %<>% slice(-forTheChop)

# need parasite specificity measured only in native species


fAN <- fA %>% dplyr::filter(Exotic_or_native=="Native")
mNat <- as.data.frame.matrix(table(fAN$Parasite_species,fAN$Host_species))

#perform mpd analysis
library(picante)
phydist <- ape::cophenetic.phylo(tree) 

#reduce phydist to host species in fish database
idx <- which(rownames(phydist) %in% fAN$Host_species)
phydist.nat <- phydist[idx,idx]

#reduce HP association matrix to fish in phydist
idx <- which(colnames(mNat) %in% colnames(phydist.nat))
mNat <- mNat[,idx]
idx <- which(rowSums(mNat)!=0)
mNat <- mNat[idx,]
```

```{r eval=FALSE}
zNat <- picante::ses.mpd(mNat,phydist.nat,null.model="independentswap",runs=1000,abundance.weighted=F)
save(zNat,file="get_zNat.Rda")
```

```{r}
load("get_zNat.Rda")
zNat %<>% mutate(Parasite_species=rownames(.))

paraPhylum <- f %>% dplyr::select(Parasite_species,Phylum_parasite) %>% distinct()
paraClass <- f %>% dplyr::select(Parasite_species,Class_parasite) %>% distinct()

zNat %<>% left_join(.,paraPhylum)
zNat %<>% left_join(.,paraClass)

zNat %<>% left_join(.,natBoth)
zNat %<>% drop_na(Phylum_parasite,mpd.obs.z)
zNat %<>% mutate(sg=if_else(mpd.obs.z>(-1.96),"g","s"))

#density plot of specificity
#zNat %>% dplyr::filter(Phylum_parasite %in% c("Platyhelminthes","Nematoda")) %>% ggplot(.,aes(x=mpd.obs.z,fill=as.factor(natBoth)))+geom_density(alpha=0.3)+facet_wrap(~Phylum_parasite)

plot.zNatA <- zNat %>% dplyr::filter(Phylum_parasite %in% c("Platyhelminthes","Nematoda")) %>% ggplot(.,aes(x=mpd.obs.z,fill=as.factor(natBoth)))+geom_density(alpha=0.5,trim=T,col="gray50")+xlab("Phylogenetic specificity")+scale_fill_manual(name="Host type infected",labels=c("Native and exotic","Native only"),values=c("orange","skyblue"))+ylab("Density")+theme_classic()+ggtitle("Adult parasite stages")+facet_wrap(~Phylum_parasite)+xlim(-6,1.5)+ylim(0,0.6)+theme(legend.position="none")



zNat %>% dplyr::filter(Phylum_parasite %in% c("Platyhelminthes")) %>% ggplot(.,aes(y=mpd.obs.z,x=as.factor(natBoth)))+geom_violin(aes(fill=as.factor(natBoth)))


zPlat1 <- zNat %>% dplyr::filter(Phylum_parasite %in% c("Platyhelminthes") & natBoth=="nat") %>% dplyr::select(mpd.obs.z) %>% pull()
zPlat2 <- zNat %>% dplyr::filter(Phylum_parasite %in% c("Platyhelminthes") & natBoth=="both") %>% dplyr::select(mpd.obs.z) %>% pull()

wilcox.test(zPlat1,zPlat2)

zPlat1 <- zNat %>% dplyr::filter(Phylum_parasite %in% c("Nematoda") & natBoth=="nat") %>% dplyr::select(mpd.obs.z) %>% pull()
zPlat2 <- zNat %>% dplyr::filter(Phylum_parasite %in% c("Nematoda") & natBoth=="both") %>% dplyr::select(mpd.obs.z) %>% pull()

wilcox.test(zPlat1,zPlat2)

zPlat1 <- zNat %>% dplyr::filter(Phylum_parasite %in% c("Platyhelminthes","Nematoda") & natBoth=="nat") %>% dplyr::select(mpd.obs.z) %>% pull()
zPlat2 <- zNat %>% dplyr::filter(Phylum_parasite %in% c("Platyhelminthes","Nematoda") & natBoth=="both") %>% dplyr::select(mpd.obs.z) %>% pull()

wilcox.test(zPlat1,zPlat2)

#library(brunnermunzel)

#brunnermunzel.test(zPlat1,zPlat2)

#library(nonpar)
#lepage.test(zPlat1,zPlat2)

#library(misty)

```

Are the specialists acquired in hosts more related to invasives than the specialists not acquired?

```{r}

exoHosts <- fA %>% dplyr::filter(Exotic_or_native=="Exotic") %>% dplyr::select(Host_species) %>% distinct() %>% pull()
q <- expand_grid(para=zNat$Parasite_species,exotic=exoHosts)

q %<>% dplyr::mutate(paraHost=paste(para,exotic,sep="_"))

infection4Merge <- fA %>% dplyr::filter(Exotic_or_native=="Exotic") %>% dplyr::select(Host_species,Parasite_species)

infection4Merge %<>% dplyr::mutate(paraHost=paste(Parasite_species,Host_species,sep="_"),infect=1)
infection4Merge %<>% dplyr::select(paraHost,infect)

q %<>% left_join(.,infection4Merge)
q %<>% replace_na(.,list(infect=0))

q %<>% dplyr::select(-paraHost)

zNat4Merge <- zNat %>% dplyr::select(Parasite_species,mpd.obs.z)
zNat4Merge %<>% dplyr::rename(para=Parasite_species)

q %<>% left_join(.,zNat4Merge)

q %<>% dplyr::mutate(minPD=-1,meanPD=-1)

idx <- which(rownames(phydist) %in% fA$Host_species)
phydist.mini <- phydist[idx,idx]

for (i in 1:dim(q)[1]){
  thisPara <- q$para[i]
  thisExotic <- q$exotic[i]
  s <- fA %>% dplyr::filter(Parasite_species==thisPara) %>% dplyr::select(Parasite_species,Host_species) %>% distinct()
  s %<>% dplyr::filter(Host_species!=thisExotic) %>% pull(Host_species)
  idx.row <- which(rownames(phydist.mini)==thisExotic)
  idx.col <- which(colnames(phydist.mini) %in% s)
  phy <- phydist.mini[idx.row,idx.col]
  q$meanPD[i] <- mean(phy)
  q$minPD[i] <- min(phy)
}

#q %>% ggplot(.,aes(x=as.factor(infect),y=minPD))+geom_boxplot()
#q %>% ggplot(.,aes(x=as.factor(infect),y=meanPD))+geom_boxplot()
# make specificity groups
qs=quantile(q$mpd.obs.z,c(0,1/3,2/3,1))
q %<>% dplyr::mutate(z.gp=cut(mpd.obs.z, breaks=qs, labels=c("spec","int","gen"),include.lowest = TRUE))
q %<>% dplyr::mutate(z.sg=if_else(mpd.obs.z<(-1.96),"spec","gen"))

phylum4Merge <- paraPhylum %>% dplyr::rename(para=Parasite_species)
q %<>% left_join(.,phylum4Merge)


q %<>% dplyr::mutate(z.sg=factor(z.sg,levels=c("spec","gen")))

plot.PDA <- q %>% dplyr::filter(Phylum_parasite %in% c("Nematoda","Platyhelminthes")) %>% ggplot(.,aes(x=z.sg,y=meanPD))+geom_boxplot(aes(fill=as.factor(infect)),alpha=0.5)+facet_wrap(~Phylum_parasite)+scale_fill_manual(name="acquired?",values=c("gold1","dodgerblue3"))+xlab("")+ylab("Average PD between exotic")+theme_classic()+theme(legend.position="none",axis.title.y = element_text(hjust=0))+scale_x_discrete(labels=c("spec"="Specialist","gen"="Generalist"))+ggtitle("Adult stage parasites")


q %>% dplyr::filter(Phylum_parasite %in% c("Platyhelminthes","Nematoda")) %>% ggplot(.,aes(x=mpd.obs.z, y=infect))+geom_point()+stat_smooth(method="loess",span=1,se=FALSE)+scale_y_sqrt()#+ylim(0,0.25)

```

Similar analysis for the juvenile stages of parasites

```{r filterJuvenile}
f %<>% mutate(Stage=stringr::str_replace_all(Stage,"Juvenile","Larva"))
fJ <- f %>% dplyr::filter(Stage=="Larva")

# remove host or parasite taxa not identified to species
fJ %<>% dplyr::filter(grepl("sp\\.",Host_species)==F)
fJ %<>% dplyr::filter(grepl("sp\\.",Parasite_species)==F)

hostOfJuvParas <- fJ %>% dplyr::select(Host_species) %>% distinct() %>% pull()
hostOfJuvParas <- gsub("_"," ",hostOfJuvParas)
```

```{r createHPmatrixJuv}
# matrix of host-(adult)parasite associations
mJ <- as.data.frame.matrix(table(fJ$Parasite_species,fJ$Host_species))
```

```{r eval=F}
#FISHBASE PACKAGE HAS DEVELOPED A BUG
# probably a fish synonym issue, but for now remove host species not in fish phylo
missingFish <- setdiff(colnames(mJ),tree$tip.label)
missingFishFormatted <- gsub("_"," ",missingFish)
synCheck <- rfishbase::synonyms(missingFishFormatted)
synCheck %<>% dplyr::filter(Status %in% c("misapplied name","synonym")) %>% dplyr::select(synonym,Species)
synCheck %<>% dplyr::mutate(across(.cols=everything(),~str_replace_all(.," ","_")))

idx.1 <- which(fJ$Host_species==synCheck$synonym[1])#identifies synomym mathcing in tree
idx.2 <- which(fJ$Host_species==synCheck$synonym[2])# does not
idx.3 <- which(fJ$Host_species==synCheck$synonym[3])# does not

#remove found fish from missing fish
idx.foundFish <- which(missingFish %in% synCheck$synonym)
missingFish <- missingFish[-idx.foundFish]
missingFishFormatted <- gsub("_"," ",missingFish)


fJ$Host_species[idx.1] <- synCheck$Species[1]
fJ$Host_species[idx.2] <- synCheck$Species[2]
fJ$Host_species[idx.3] <- synCheck$Species[3]

# recalculate matrix of host-(juv)parasite associations
mJ <- as.data.frame.matrix(table(fJ$Parasite_species,fJ$Host_species))

# for now we remove from host-parasite data those fish species that are not found in the phylogenetic tree
fJ %<>% dplyr::filter(!Host_species %in% missingFish)
#reCalc fParas now some species removed
fParasJ <- fJ %>% dplyr::select(Parasite_species) %>% distinct() %>% pull()
```

Are the (juvenile) parasites of exotic fish species (that are also parasites of native fish species) a non-random sample?

```{r}

exoParasJ <- fJ %>% dplyr::filter(Exotic_or_native=="Exotic") %>% dplyr::select(Parasite_species) %>% distinct() %>% pull()
natParasJ <- fJ %>% dplyr::filter(Exotic_or_native=="Native") %>% dplyr::select(Parasite_species) %>% distinct() %>% pull()

onlyExoParasJ <- setdiff(exoParasJ,natParasJ)


fJ %<>% dplyr::filter(!Parasite_species%in%onlyExoParasJ)


natBothJ <- tibble(Parasite_species=exoParasJ,natBoth="both")
natBoth2J <- tibble(Parasite_species=natParasJ,natBoth="nat")
natBothJ %<>% bind_rows(.,natBoth2J)

doubleCounted <- natBothJ %>% group_by(Parasite_species) %>% summarize(n=n()) %>% dplyr::filter(n>1) %>% pull(Parasite_species)
forTheChop <- NULL
for (i in 1:dim(natBothJ)[1]){
  if (natBothJ$Parasite_species[i] %in% doubleCounted & natBothJ$natBoth[i]=="nat"){
    forTheChop <- c(forTheChop,i)
  }
}

natBothJ %<>% slice(-forTheChop)

# need parasite specificity measured only in native species


fJN <- fJ %>% dplyr::filter(Exotic_or_native=="Native")
mNatJ <- as.data.frame.matrix(table(fJN$Parasite_species,fJN$Host_species))


#reduce phydist to host species in fish database
idx <- which(rownames(phydist) %in% fJN$Host_species)
phydist.natJ <- phydist[idx,idx]

#reduce HP association matrix to fish in phydist
idx <- which(colnames(mNatJ) %in% colnames(phydist.natJ))
mNatJ <- mNatJ[,idx]
idx <- which(rowSums(mNatJ)!=0)
mNatJ <- mNatJ[idx,]
```

```{r eval=FALSE}
zNatJ <- picante::ses.mpd(mNatJ,phydist.natJ,null.model="independentswap",runs=1000,abundance.weighted=F)
save(zNatJ,file="get_zNatJ.Rda")
```

```{r}
load("get_zNatJ.Rda")
zNatJ %<>% mutate(Parasite_species=rownames(.))

zNatJ %<>% left_join(.,paraPhylum)
zNatJ %<>% left_join(.,paraClass)

zNatJ %<>% left_join(.,natBothJ)
zNatJ %<>% drop_na(Phylum_parasite,mpd.obs.z)
zNatJ %<>% mutate(sg=if_else(mpd.obs.z>(-1.96),"g","s"))

#density plot of specificity
plot.zNatJ <- zNatJ %>% dplyr::filter(Phylum_parasite %in% c("Platyhelminthes","Nematoda")) %>% ggplot(.,aes(x=mpd.obs.z,fill=as.factor(natBoth)))+geom_density(alpha=0.5,trim=T,col="gray50")+xlab("Phylogenetic specificity")+scale_fill_manual(name="Host type infected",labels=c("Native and exotic","Native only"),values=c("orange","skyblue"))+ylab("Density")+theme_classic()+ggtitle("Juvenile parasite stages")+theme(legend.position=c(0.15,0.5))+facet_wrap(~Phylum_parasite)+xlim(-6,1.5)+ylim(0,0.6)

# can we say: Among platyhelminthes, generalist juveniles are more likely to infect exotic species {cost of specialism}
zNatJ %>% dplyr::filter(Phylum_parasite %in% c("Platyhelminthes")) %$% table(natBoth,sg)
prop.test(x=c(0,11),n=c(9,39),alternative="less")
# p-val >0.05, so strictly no

# can we say: Juvenile stage parasites are more generalist than adult stage parasites
# not much overlap on actual species, so paired t-test doesn't make sense
t.test(zNatJ$mpd.obs.z[zNatJ$Phylum_parasite %in% c("Platyhelminthes","Nematoda")],zNat$mpd.obs.z[zNatJ$Phylum_parasite %in% c("Platyhelminthes","Nematoda")])


# can we say: Among platyhelminthes, generalist adults are more likely to infect exotic species {cost of specialism}
zNat %>% dplyr::filter(Phylum_parasite %in% c("Platyhelminthes")) %$% table(natBoth,sg)
prop.test(x=c(6,6),n=c(31,56),alternative="less")
# p-val >>0.05, so no

# can we say: Among nematoda, generalist adults are more likely to infect exotic species {cost of specialism}
zNat %>% dplyr::filter(Phylum_parasite %in% c("Nematoda")) %$% table(natBoth,sg)
prop.test(x=c(3,4),n=c(11,17),alternative="less")
# p-val >>0.05, so no

```

```{r}

exoHostsJ <- fJ %>% dplyr::filter(Exotic_or_native=="Exotic") %>% dplyr::select(Host_species) %>% distinct() %>% pull()
qJ <- expand_grid(para=zNatJ$Parasite_species,exotic=exoHostsJ)

qJ %<>% dplyr::mutate(paraHost=paste(para,exotic,sep="_"))

infection4Merge <- fJ %>% dplyr::filter(Exotic_or_native=="Exotic") %>% dplyr::select(Host_species,Parasite_species)

infection4Merge %<>% dplyr::mutate(paraHost=paste(Parasite_species,Host_species,sep="_"),infect=1)
infection4Merge %<>% dplyr::select(paraHost,infect)

qJ %<>% left_join(.,infection4Merge)
qJ %<>% replace_na(.,list(infect=0))

qJ %<>% dplyr::select(-paraHost)

zNat4Merge <- zNatJ %>% dplyr::select(Parasite_species,mpd.obs.z)
zNat4Merge %<>% dplyr::rename(para=Parasite_species)

qJ %<>% left_join(.,zNat4Merge)

qJ %<>% dplyr::mutate(minPD=-1,meanPD=-1)

idx <- which(rownames(phydist) %in% fJ$Host_species)
phydist.mini <- phydist[idx,idx]

for (i in 1:dim(qJ)[1]){
  thisPara <- qJ$para[i]
  thisExotic <- qJ$exotic[i]
  s <- fJ %>% dplyr::filter(Parasite_species==thisPara) %>% dplyr::select(Parasite_species,Host_species) %>% distinct()
  s %<>% dplyr::filter(Host_species!=thisExotic) %>% pull(Host_species)
  idx.row <- which(rownames(phydist.mini)==thisExotic)
  idx.col <- which(colnames(phydist.mini) %in% s)
  phy <- phydist.mini[idx.row,idx.col]
  qJ$meanPD[i] <- mean(phy)
  qJ$minPD[i] <- min(phy)
}


qs=quantile(qJ$mpd.obs.z,c(0,1/3,2/3,1))
qJ %<>% dplyr::mutate(z.gp=cut(mpd.obs.z, breaks=qs, labels=c("spec","int","gen"),include.lowest = TRUE))
qJ %<>% dplyr::mutate(z.sg=if_else(mpd.obs.z<(-1.96),"spec","gen"))


qJ %<>% left_join(.,phylum4Merge)

qJ %<>% dplyr::mutate(z.sg=factor(z.sg,levels=c("spec","gen")))

plot.PDJ <- qJ %>% dplyr::filter(Phylum_parasite %in% c("Nematoda","Platyhelminthes")) %>% ggplot(.,aes(x=z.sg,y=meanPD))+geom_boxplot(aes(fill=as.factor(infect)),alpha=0.5,position=position_dodge2(preserve="single"))+facet_wrap(~Phylum_parasite)+scale_fill_manual(name="Infect exotic\nspecies",values=c("gold1","dodgerblue3"))+xlab("")+ylab("species and native hosts")+theme_classic()+scale_x_discrete(labels=c("spec"="Specialist","gen"="Generalist"))+ggtitle("Juvenile stage parasites")

qJ %>% dplyr::filter(Phylum_parasite %in% c("Platyhelminthes","Nematoda")) %>% ggplot(.,aes(x=mpd.obs.z, y=infect))+geom_point()+stat_smooth(method="loess",span=1.5,se=FALSE)+facet_wrap(~Phylum_parasite)+scale_y_sqrt()


z.J0 <- qJ %>% dplyr::filter(Phylum_parasite %in% c("Platyhelminthes") & infect==0)
z.J1 <- qJ %>% dplyr::filter(Phylum_parasite %in% c("Platyhelminthes") & infect==1)

#wilcox.test(z.J0,z.J1) #needs vectors not dataframes

```

```{r eval=F}
library(patchwork)
plot.zNat <- plot.zNatJ/plot.zNatA
ggsave("plot.zNat.png",height=4,width=7)


plot.PD <- plot.PDJ/plot.PDA
ggsave("plot.PD.png",height=4,width=7)
```

```{r}
#extreme specialists

x <- zNat %>% dplyr::filter(Phylum_parasite %in% c("Platyhelminthes","Nematoda") & mpd.obs.z < (-2.33))
table(x$natBoth)

y <- zNat %>% dplyr::filter(Phylum_parasite %in% c("Platyhelminthes","Nematoda") & mpd.obs.z > (-2.33) & mpd.obs.z < (-1.96))
table(y$natBoth)

z <- zNat %>% dplyr::filter(Phylum_parasite %in% c("Platyhelminthes","Nematoda") & mpd.obs.z > (-1.96))
table(z$natBoth)

yz <- zNat %>% dplyr::filter(Phylum_parasite %in% c("Platyhelminthes","Nematoda") & mpd.obs.z > (-2.33))
table(yz$natBoth)

xy <- zNat %>% dplyr::filter(Phylum_parasite %in% c("Platyhelminthes","Nematoda") & mpd.obs.z < (-1.96))
table(xy$natBoth)


prop.test(c(7,2,10),c(27,15,73),correct=F,alternative="greater")
prop.test(c(7,12),c(27,88),correct=F,alternative="greater")
prop.test(c(9,10),c(42,73),correct=F,alternative="greater")


x.p <- zNat %>% dplyr::filter(Phylum_parasite %in% c("Platyhelminthes") & mpd.obs.z < (-2.33))
table(x.p$natBoth)

y.p <- zNat %>% dplyr::filter(Phylum_parasite %in% c("Platyhelminthes") & mpd.obs.z > (-2.33) & mpd.obs.z < (-1.96))
table(y.p$natBoth)

z.p <- zNat %>% dplyr::filter(Phylum_parasite %in% c("Platyhelminthes") & mpd.obs.z > (-2.33) & mpd.obs.z < (-1.96))
table(z.p$natBoth)

zNatLocReg <- zNat %>% dplyr::filter(Phylum_parasite %in% c("Platyhelminthes","Nematoda"))
zNatLocReg %<>% mutate(exo=if_else(natBoth=="both",1,0),stage="Adult")
##
zNatLocRegJ <- zNatJ %>% dplyr::filter(Phylum_parasite %in% c("Platyhelminthes","Nematoda"))
zNatLocRegJ %<>% mutate(exo=if_else(natBoth=="both",1,0),stage="Juvenile")

zNatLocReg %<>% bind_rows(.,zNatLocRegJ)
zNatLocReg %<>% mutate(stage=factor(stage,levels=c("Juvenile","Adult")))
zNatLocReg.plot <- zNatLocReg %>% ggplot(.,aes(x=mpd.obs.z,y=exo,col=Phylum_parasite))+geom_smooth(se=F,span=1.2)+geom_point(aes(col=Phylum_parasite))+facet_wrap(~stage,scales="free_x")+ylim(0,1)+xlab("[S] <- Parasite phylogenetic specificity -> [G]")+ylab("Probability of infecting exotic host species")+scale_color_discrete(name="Parasite phylum")+theme_classic()
ggsave("localReg.png",zNatLocReg.plot,height=4,width=7)

```

```{r}
# are exclusively 'exotic host' parasites taxonomically distinct from other parasites?

exoParas #n=61
exoParasJ #n=20
natParas #n=375
natParasJ #n=99
onlyExoParas #n=30
onlyExoParasJ #n=1

onlyNatParas <- setdiff(natParas,exoParas)
onlyNatParasJ <- setdiff(natParasJ,exoParasJ)

bothParas <- setdiff(unique(c(exoParas,natParas)),unique(c(onlyExoParas,onlyNatParas)))
bothParasJ <- setdiff(unique(c(exoParasJ,natParasJ)),unique(c(onlyExoParasJ,onlyNatParasJ)))

taxDist <- tibble(para=character(0),hostSet=character(0))

tmpExo <- tibble(onlyExoParas)
tmpExo %<>% bind_cols(.,"exo")
tmpExo %<>% dplyr::rename(para=onlyExoParas,hostSet=`...2`)

tmpNat <- tibble(onlyNatParas)
tmpNat %<>% bind_cols(.,"nat")
tmpNat %<>% dplyr::rename(para=onlyNatParas,hostSet=`...2`)

tmpBoth <- tibble(bothParas)
tmpBoth %<>% bind_cols(.,"both")
tmpBoth %<>% dplyr::rename(para=bothParas,hostSet=`...2`)

taxDist %<>% bind_rows(.,tmpNat)
taxDist %<>% bind_rows(.,tmpExo)
taxDist %<>% bind_rows(.,tmpBoth)


```

```{r}
frm <- ~kingdom/phylum/class/order/family/genus/species

myTaxa %<>% mutate(species=as.factor(species))
myTaxa %<>% mutate(genus=as.factor(genus))
myTaxa %<>% mutate(family=as.factor(family))
myTaxa %<>% mutate(order=as.factor(order))
myTaxa %<>% mutate(class=as.factor(class))
myTaxa %<>% mutate(phylum=as.factor(phylum))
myTaxa %<>% mutate(kingdom=as.factor(kingdom))

tr <- as.phylo(frm, data = myTaxa, collapse=FALSE)
tr$edge.length <- rep(1, nrow(tr$edge))
plot.phylo(tr,show.tip.label = F,show.node.label = T,font=3,cex=0.5)




	
tr2 <- ape::root(tr,outgroup=c("Piscicolaria reducta","Myzobdella lugubris","Myzobdella patzcuarensis"),resolve.root=T)
plot.phylo(tr2,show.tip.label = F,show.node.label = T,font=3,cex=0.5)
## evol distinctiveness of parasites


#ed <- picante::evol.distinct(tr2,type="equal.split")

library(caper)

ed <- caper::ed.calc(tr)
ed <- ed$spp

para4join <- taxDist %>% rename(species=para)
para4join %<>% mutate(species=str_replace_all(species,"_"," "))

ed %<>% left_join(.,para4join)

ed %>% ggplot(.,aes(x=as.factor(hostSet),y=ED))+geom_boxplot()

library(ggtree)

```

```{r pairwise, eval=F}
###pairwise dist

myPairs <- tibble(sp1=character(0),sp2=character(0),setComparison=character(0),highestSharedRank=character(0))

for (i in 1:dim(myTaxa)[1]){
  for (j in i:dim(myTaxa)[1]){
    if (i!=j){
      #obtain Genus species and Genus_species
      sp1 <- myTaxa$species[i]
      sp2 <- myTaxa$species[j]
      sp_1 <- gsub(" ","_",sp1)
      sp_2 <- gsub(" ","_",sp2)
      #look up each parasite's set
      idx1 <- which(taxDist$para==sp1)
      idx2 <- which(taxDist$para==sp2)
      # define set comparison
      if (taxDist$hostSet[idx1]=="exo" & taxDist$hostSet[idx2]=="exo"){
        setComparison <- "exo-exo"
      }
      if (taxDist$hostSet[idx1]=="exo" & taxDist$hostSet[idx2]=="nat"){
        setComparison <- "exo-nat"
      }
      if (taxDist$hostSet[idx1]=="nat" & taxDist$hostSet[idx2]=="exo"){
        setComparison <- "exo-nat"
      }
      if (taxDist$hostSet[idx1]=="exo" & taxDist$hostSet[idx2]=="both"){
        setComparison <- "exo-both"
      }
      if (taxDist$hostSet[idx1]=="both" & taxDist$hostSet[idx2]=="exo"){
        setComparison <- "exo-both"
      }
      if (taxDist$hostSet[idx1]=="nat" & taxDist$hostSet[idx2]=="nat"){
        setComparison <- "nat-nat"
      }
      if (taxDist$hostSet[idx1]=="nat" & taxDist$hostSet[idx2]=="both"){
        setComparison <- "nat-both"
      }
      if (taxDist$hostSet[idx1]=="both" & taxDist$hostSet[idx2]=="nat"){
        setComparison <- "nat-both"
      }
      if (taxDist$hostSet[idx1]=="both" & taxDist$hostSet[idx2]=="both"){
        setComparison <- "both-both"
      }
      
      rnkTF <- NULL
      
      
      for (k in 1:7){#the 7 taxonomic ranks
        rnkTF <- c(rnkTF,myTaxa[i,k]==myTaxa[j,k])
      }
      highestSharedRank <- colnames(myTaxa)[which(diff(rnkTF)==-1)]
      myPairs %<>% add_case(sp1=sp1,sp2=sp2,setComparison=setComparison,highestSharedRank=highestSharedRank)
    }
  }
}

myPairs %<>% mutate(highestSharedRank=factor(highestSharedRank,levels=c("kingdom","phylum","class","order","family","genus")))

myPairs %<>% mutate(setComparison=factor(setComparison,levels=c("nat-nat","nat-both","both-both","exo-nat","exo-both","exo-exo")))
save(myPairs,file="get_myPairs.Rda")
```

```{r}
load("get_myPairs.Rda")
myPairs %>% ggplot(.,aes(setComparison,fill=highestSharedRank))+geom_bar(position="fill")

myPairs %<>% dplyr::mutate(dist=0)

for (i in 1:dim(myPairs)[1]){
  if (myPairs$highestSharedRank[i]=="kingdom"){myPairs$dist[i] <- 6}
  if (myPairs$highestSharedRank[i]=="phylum") {myPairs$dist[i] <- 5}
  if (myPairs$highestSharedRank[i]=="class")  {myPairs$dist[i] <- 4}
  if (myPairs$highestSharedRank[i]=="order")  {myPairs$dist[i] <- 3}
  if (myPairs$highestSharedRank[i]=="family") {myPairs$dist[i] <- 2}
  if (myPairs$highestSharedRank[i]=="genus")  {myPairs$dist[i] <- 1}
}

myPairs %>% ggplot(.,aes(x=setComparison,y=dist))+geom_violin()





```

```{r treeTips}

tips <- as.data.frame(tr$tip.label)
tips %<>% dplyr::rename(para=`tr$tip.label`)
hostSet4join <- taxDist %>% mutate(para=str_replace_all(para,"_"," "))
tips %<>% left_join(.,hostSet4join)

cladeEXObranches<-which.edge(tr,which(tips$hostSet=="exo"))
cladeNATbranches<-which.edge(tr,which(tips$hostSet=="nat"))
cladeBOTHbranches<-which.edge(tr,which(tips$hostSet=="both"))

my.edge.colors<-rep("gray20",length(tr$edge.length))
my.edge.colors[cladeEXObranches]<-"dodgerblue3"
my.edge.colors[cladeNATbranches]<-"gray80"
my.edge.colors[cladeBOTHbranches]<-"brown"

plot(tr,show.tip.label=T,edge.color=my.edge.colors,edge.width=0.5,direction="rightwards",cex=0.3,label.offset=0)#,x.lim=c(0,1200))


comm <- as.data.frame.matrix(table(taxDist$para,taxDist$hostSet))
comm <- 1*(comm>0)
rownames(comm) <- gsub("_"," ",rownames(comm))
#get the nri (net relatedness index)
library(picante)
nri <-ses.mpd(t(comm),tr,null.model="independentswap",runs=1000,abundance.weighted=F)#change back to 1000!



```

```{r eval=F}
#traits of 'best hosts'?
library(rfishbase)
z <- rfishbase::diet(tips$para[1])


tmp <- rfishbase::popchar(hostOfAdultParas)

tmp %>% ggplot(.,aes(x=Lmax,y=Wmax))+geom_point()
tmp %>% ggplot(.,aes(x=Lmax,y=tmax))+geom_point()
tmp %>% ggplot(.,aes(x=tmax,y=Wmax))+geom_point()


#as a look-see, get the most specialist parasite (adult-stage)
#Salsuginus_angularis
# and the most generalist (with at least 5 host species)
#Magnivitellinum_simplex
#what sort of hosts do they use
hostsOfSpec <- fA %>% dplyr::filter(Parasite_species=="Salsuginus_angularis") %>% dplyr::select(Host_species) %>% distinct() %>% pull()
hostsOfGen <- fA %>% dplyr::filter(Parasite_species=="Magnivitellinum_simplex") %>% dplyr::select(Host_species) %>% distinct() %>% pull()

hostsOfSpec <- gsub("_"," ",hostsOfSpec)
hostsOfGen <- gsub("_"," ",hostsOfGen)
popCharSpec <- rfishbase::popchar(hostsOfSpec)
popCharGen <- rfishbase::popchar(hostsOfGen)

hostTraits <- tibble(Parasite_species=character(0),
                     maxLmax=numeric(0),
                     maxWmax=numeric(0),
                     maxTmax=numeric(0))

for (i in 1:dim(zNat)[1]){
  thisPara <- zNat$Parasite_species[i]
  hostsOfThisPara <- fA %>% dplyr::filter(Parasite_species==thisPara) %>% dplyr::select(Host_species) %>% distinct() %>% pull()
  hostsOfThisPara <- gsub("_"," ",hostsOfThisPara)
  popCharThisPara <- rfishbase::popchar(hostsOfThisPara)
  if (dim(popCharThisPara)[1]>0){
  lengthHostsThisPara <- max(popCharThisPara$Lmax,na.rm=T)
  weightHostsThisPara <- max(popCharThisPara$Wmax,na.rm=T)
  longevHostsThisPara <- max(popCharThisPara$tmax,na.rm=T)
  hostTraits %<>% add_case(Parasite_species=thisPara,
                           maxLmax=lengthHostsThisPara,
                           maxWmax=weightHostsThisPara,
                           maxTmax=longevHostsThisPara)
  }
}

zNat4Join <- zNat %>% dplyr::select(Parasite_species,Phylum_parasite,mpd.obs.z)
hostTraits %<>% left_join(.,zNat4Join)

hostTraits %>% ggplot(.,aes(x=mpd.obs.z,y=maxTmax))+geom_point()+geom_smooth()

```
